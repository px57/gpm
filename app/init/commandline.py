
from init.choices import choices_project_type
from kernel.path.find import find_directory_in_parent
from config.config import Config
from kernel.git.remote import get_remote_url
from kernel.git.remote import get_repository_name
import os 

def create_readme_ifnot_exist(root_path: str) -> None:
    """
    This function is to create README.md
    """
    # -> create README.md if not exists
    readme_path = os.path.join(root_path, "README.md")
    if not os.path.exists(readme_path):
        with open(readme_path, "w") as f:
            f.write("# {}\n".format(get_repository_name()))
            f.write("This is a project generated by gpm\n")

def commandline__init():
    """
    This function is to initialize the command line
    """
    root_path = find_directory_in_parent(".git", '.')
    gpm_path = os.path.join(root_path, ".gpm")

    if os.path.exists(gpm_path):
        print ("The project is already initialized, you want to reinitialize it? (y/n)")
        answer = input()
        if answer != "y":
            return
        

    project_type = choices_project_type()

    if not os.path.exists(gpm_path):
        os.makedirs(gpm_path)

    config = Config()
    config.set("root_path", root_path)
    config.set("gpm_path", gpm_path)
    config.set("project_type", project_type["value"])
    config.set("repository_url", get_remote_url())
    config.set("name", get_repository_name())
    config.save()

    create_readme_ifnot_exist(root_path)

    print ("The root path is: {}".format(root_path))
    print ("The gpm path is: {}".format(gpm_path))